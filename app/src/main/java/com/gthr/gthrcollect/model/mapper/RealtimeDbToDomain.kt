package com.gthr.gthrcollect.model.mapper

import com.gthr.gthrcollect.model.domain.*
import com.gthr.gthrcollect.model.network.firebaserealtimedb.*

fun CollectionInfoModel.toCollectionInfoDomainModel(collectionId: String = "") =
    CollectionInfoDomainModel(
        about = about,
        buyList = buyList,
        collectionDisplayName = collectionDisplayName, //collectionList,
        collectionRawName = collectionRawName,
        favoriteCollectionList = favoriteCollectionList,
        favoriteProductList = favoriteProductList,
        followersList = followersList,
        sellList = sellList,
        userRefKey = userRefKey,
        profileImage = profileImageURL,
        collectionId = collectionId
    )

fun FunkoModel.toFunkoDomainModel() = FunkoDomainModel(
    category = this.category,
    exclusivity = this.exclusivity,
    funkoType = this.funkoType,
    highestBidCost = this.highestBidCost,
    highestBidID = this.highestBidID,
    imageURL = this.imageURL,
    itemNumber = this.itemNumber,
    license = this.license,
    lowestAskCost = this.lowestAskCost,
    lowestAskID = this.lowestAskID,
    marketValue = this.marketValue,
    name = this.name,
    numberOfFavorites = this.numberOfFavorites,
    objectID = this.objectID,
    productType = this.productType,
    releaseDate = this.releaseDate,
    status = this.status,
    tier = this.tier,
)

fun MTGModel.toMTGDomainModel() = MTGDomainModel(
    artist = this.artist,
    artistIds = this.artistIds,
    booster = this.booster,
    borderColor = this.borderColor,
    cardBackId = this.cardBackId,
    cmc = this.cmc,
    collectorNumber = this.collectorNumber,
    colorIdentity = this.colorIdentity,
    colors = this.colors,
    digital = this.digital,
    flavorText = this.flavorText,
    foil = this.foil,
    frame = this.frame,
    fullArt = this.fullArt,
    games = this.games,
    highestBidCost = this.highestBidCost,
    highestBidID = this.highestBidID,
    highresImage = this.highresImage,
    id = this.id,
    illustrationId = this.illustrationId,
    imageID = this.imageID,
    imageUris = this.imageUris,
    keywords = this.keywords,
    lang = this.lang,
    largeImg = this.largeImg,
    layout = this.layout,
    legalities = this.legalities,
    lowestAskCost = this.lowestAskCost,
    lowestAskID = this.lowestAskID,
    manaCost = this.manaCost,
    mtgoFoilId = this.mtgoFoilId,
    mtgoId = this.mtgoId,
    name = this.name,
    nonfoil = this.nonfoil,
    numberOfFavorites = this.numberOfFavorites,
    objectID = this.objectID,
    objectX = this.objectX,
    oracleId = this.oracleId,
    oracleText = this.oracleText,
    oversized = this.oversized,
    pngImg = this.pngImg,
    power = this.power,
    prices = this.prices,
    printsSearchUri = this.printsSearchUri,
    producedMana = this.producedMana,
    productType = this.productType,
    promo = this.promo,
    promoTypes = this.promoTypes,
    rarity = this.rarity,
    releasedAt = this.releasedAt,
    reprint = this.reprint,
    reserved = this.reserved,
    rulingsUri = this.rulingsUri,
    scryfallSetUri = this.scryfallSetUri,
    scryfallUri = this.scryfallUri,
    `set` = this.`set`,
    setName = this.setName,
    setSearchUri = this.setSearchUri,
    setType = this.setType,
    setUri = this.setUri,
    smallImg = this.smallImg,
    storySpotlight = this.storySpotlight,
    tcgplayerId = this.tcgplayerId,
    textless = this.textless,
    toughness = this.toughness,
    typeLine = this.typeLine,
    uri = this.uri,
    variation = this.variation,
    watermark = this.watermark,
)

fun PokemonModel.toPokemonDomainModel() = PokemonDomainModel(
    japanese = this.japanese,
    english = this.english,
    cardType = this.cardType,
    highestBidCost = this.highestBidCost,
    highestBidID = this.highestBidID,
    hp = this.hp,
    imageID = this.imageID,
    imageURL = this.imageURL,
    japaneseNumber = this.japaneseNumber,
    japaneseSet = this.japaneseSet,
    lowestAskCost = this.lowestAskCost,
    lowestAskID = this.lowestAskID,
    name = this.name,
    noLanguagenoEdition = this.noLanguagenoEdition,
    number = this.number,
    numberOfFavorites = this.numberOfFavorites,
    objectID = this.objectID,
    priceFoil = this.priceFoil,
    priceNonFoil = this.priceNonFoil,
    productType = this.productType,
    rarity = this.rarity,
    resistance = this.resistance,
    retreatCost = this.retreatCost,
    `set` = this.`set`,
    stage = this.stage,
    weakness = this.weakness,
)

fun SealedModel.toSealedDomainModel() = SealedDomainModel(
    cardText = this.cardText,
    highestBidCost = this.highestBidCost,
    highestBidID = this.highestBidID,
    imageID = this.imageID,
    imageURL = this.imageURL,
    lowestAskCost = this.lowestAskCost,
    lowestAskID = this.lowestAskID,
    marketPrice = this.marketPrice,
    name = this.name,
    numberOfFavorites = this.numberOfFavorites,
    objectID = this.objectID,
    productType = this.productType,
    rarity = this.rarity,
    `set` = this.`set`,
    tier = this.tier,
)

fun YugiohModel.toYugiohDomainModel() = YugiohDomainModel(
    asianEnglish = this.asianEnglish,
    asianEnglishOG = this.asianEnglishOG,
    cardType = this.cardType,
    detailPrice = this.detailPrice,
    english = this.english,
    englishOG = this.englishOG,
    euroEnglish = this.euroEnglish,
    firstDescription = this.firstDescription,
    french = this.french,
    frenchCanadian = this.frenchCanadian,
    frenchOG = this.frenchOG,
    german = this.german,
    germanOG = this.germanOG,
    highestBidCost = this.highestBidCost,
    highestBidID = this.highestBidID,
    imageID = this.imageID,
    imageURL = this.imageURL,
    italian = this.italian,
    italianOG = this.italianOG,
    japanese = this.japanese,
    korean = this.korean,
    koreanOG = this.koreanOG,
    lowestAskCost = this.lowestAskCost,
    lowestAskID = this.lowestAskID,
    name = this.name,
    number = this.number,
    numberOfFavorites = this.numberOfFavorites,
    objectID = this.objectID,
    oceanicEnglish = this.oceanicEnglish,
    portuguese = this.portuguese,
    portugueseOG = this.portugueseOG,
    productType = this.productType,
    rarity = this.rarity,
    `set` = this.`set`,
    spanish = this.spanish,
    spanishOG = this.spanishOG,
    stats = this.stats,
)