Index: app/src/main/res/layout/item_feed.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<layout xmlns:tools=\"http://schemas.android.com/tools\"\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\r\n\r\n    <data>\r\n\r\n    </data>\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\">\r\n\r\n        <com.google.android.material.card.MaterialCardView\r\n            android:layout_margin=\"@dimen/margin_extra_small\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:cardCornerRadius=\"@dimen/radius\"\r\n            app:cardElevation=\"@dimen/size_elevation\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\">\r\n\r\n            <androidx.constraintlayout.widget.ConstraintLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\">\r\n\r\n                <de.hdodenhof.circleimageview.CircleImageView\r\n                    android:id=\"@+id/iv_user\"\r\n                    android:layout_width=\"@dimen/size_user_image_search_collection_cell\"\r\n                    android:layout_height=\"@dimen/size_user_image_search_collection_cell\"\r\n                    android:layout_margin=\"@dimen/margin_light\"\r\n                    android:elevation=\"@dimen/elevation_search_collection_cell\"\r\n                    android:src=\"@drawable/user\"\r\n                    app:layout_constraintStart_toStartOf=\"parent\"\r\n                    app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n                <TextView\r\n                    android:id=\"@+id/tv_user_name\"\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginStart=\"@dimen/margin_medium\"\r\n                    android:fontFamily=\"@font/lato_bold\"\r\n                    android:text=\"-\"\r\n                    android:textColor=\"@color/black\"\r\n                    android:textSize=\"@dimen/text_size_medium\"\r\n                    app:layout_constraintBottom_toBottomOf=\"@+id/iv_user\"\r\n                    app:layout_constraintStart_toEndOf=\"@+id/iv_user\"\r\n                    app:layout_constraintTop_toTopOf=\"@+id/iv_user\" />\r\n\r\n                <TextView\r\n                    android:id=\"@+id/tv_new_to\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginEnd=\"@dimen/margin_small\"\r\n                    android:fontFamily=\"@font/lato\"\r\n                    android:text=\"New To Buylist\"\r\n                    android:textColor=\"@color/text_color_dark_green\"\r\n                    android:textSize=\"@dimen/text_size_small\"\r\n                    app:layout_constraintBottom_toBottomOf=\"@+id/iv_user\"\r\n                    app:layout_constraintEnd_toEndOf=\"parent\"\r\n                    app:layout_constraintTop_toTopOf=\"@+id/iv_user\" />\r\n\r\n\r\n                <androidx.appcompat.widget.AppCompatImageView\r\n                    android:background=\"@drawable/collection_image_bg\"\r\n                    android:id=\"@+id/iv_product\"\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"0dp\"\r\n                    android:layout_margin=\"@dimen/margin_light\"\r\n                    android:src=\"@drawable/pikapika\"\r\n                    android:scaleType=\"fitCenter\"\r\n                    app:layout_constraintDimensionRatio=\"H,1:1\"\r\n                    app:layout_constraintEnd_toEndOf=\"parent\"\r\n                    app:layout_constraintStart_toStartOf=\"parent\"\r\n                    app:layout_constraintTop_toBottomOf=\"@+id/iv_user\" />\r\n\r\n                <androidx.appcompat.widget.AppCompatTextView\r\n                    android:id=\"@+id/tv_product_type\"\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginBottom=\"@dimen/margin_extra_small\"\r\n                    android:layout_marginEnd=\"@dimen/margin_light\"\r\n                    android:background=\"@drawable/bg_product_type\"\r\n                    android:elevation=\"1dp\"\r\n                    android:fontFamily=\"@font/lato\"\r\n                    android:gravity=\"center\"\r\n                    android:paddingHorizontal=\"@dimen/padding_custom_product\"\r\n                    android:paddingVertical=\"@dimen/padding_light\"\r\n                    android:text=\"Funko\"\r\n                    android:textColor=\"@color/black\"\r\n                    android:textSize=\"@dimen/text_size_semi_small\"\r\n                    app:layout_constraintBottom_toBottomOf=\"@+id/iv_product\"\r\n                    app:layout_constraintEnd_toEndOf=\"@+id/iv_product\"\r\n                    app:layout_constraintWidth_percent=\"0.25\" />\r\n\r\n                <androidx.appcompat.widget.AppCompatTextView\r\n                    android:id=\"@+id/tv_price\"\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_margin=\"@dimen/margin_light\"\r\n                    android:background=\"@drawable/bg_feed_product_price\"\r\n                    android:elevation=\"1dp\"\r\n                    android:textStyle=\"bold\"\r\n                    android:gravity=\"center\"\r\n                    android:paddingHorizontal=\"@dimen/padding_custom_product\"\r\n                    android:paddingVertical=\"@dimen/padding_light\"\r\n                    android:text=\"-\"\r\n                    android:textColor=\"@color/text_color_dark_green\"\r\n                    android:textSize=\"@dimen/text_size_medium\"\r\n                    app:layout_constraintEnd_toEndOf=\"@+id/iv_product\"\r\n                    app:layout_constraintTop_toTopOf=\"@+id/iv_product\"\r\n                    app:layout_constraintWidth_percent=\"0.25\" />\r\n\r\n\r\n                <TextView\r\n                    android:maxLines=\"2\"\r\n                    android:ellipsize=\"end\"\r\n                    android:id=\"@+id/tv_title\"\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginStart=\"@dimen/margin_extra_small\"\r\n                    android:layout_marginTop=\"@dimen/margin_small\"\r\n                    android:fontFamily=\"@font/lato_bold\"\r\n                    android:text=\"Dark Magician Girl\"\r\n                    android:textColor=\"@color/black\"\r\n                    android:textSize=\"@dimen/text_size_medium\"\r\n                    app:layout_constraintEnd_toStartOf=\"@+id/iv_share\"\r\n                    app:layout_constraintStart_toStartOf=\"parent\"\r\n                    app:layout_constraintTop_toBottomOf=\"@+id/iv_product\" />\r\n\r\n                <androidx.appcompat.widget.AppCompatImageView\r\n                    android:id=\"@+id/iv_share\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginEnd=\"@dimen/margin_semi_large\"\r\n                    app:layout_constraintBottom_toBottomOf=\"@+id/tv_title\"\r\n                    app:layout_constraintEnd_toStartOf=\"@+id/btn_buy_now\"\r\n                    app:layout_constraintTop_toTopOf=\"@+id/tv_title\"\r\n                    app:srcCompat=\"@drawable/ic_share_blue\" />\r\n\r\n\r\n                <androidx.appcompat.widget.AppCompatTextView\r\n                    android:id=\"@+id/btn_buy_now\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginEnd=\"@dimen/margin_extra_small\"\r\n                    android:background=\"@drawable/bg_btn_delivery_green\"\r\n                    android:fontFamily=\"@font/lato\"\r\n                    android:paddingHorizontal=\"@dimen/padding_normal\"\r\n                    android:paddingVertical=\"@dimen/padding_extra_small\"\r\n                    android:text=\"@string/text_buy_now_feed\"\r\n                    android:textColor=\"@color/white\"\r\n                    android:textSize=\"@dimen/margin_small\"\r\n                    app:layout_constraintBottom_toBottomOf=\"@+id/tv_title\"\r\n                    app:layout_constraintEnd_toEndOf=\"parent\"\r\n                    app:layout_constraintTop_toTopOf=\"@+id/tv_title\" />\r\n\r\n                <androidx.appcompat.widget.LinearLayoutCompat\r\n                    android:id=\"@+id/ll_set\"\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginTop=\"@dimen/margin_small\"\r\n                    android:background=\"@drawable/bg_recipt_bottom\"\r\n                    android:gravity=\"center_vertical\"\r\n                    android:orientation=\"horizontal\"\r\n                    android:paddingVertical=\"@dimen/padding_light\"\r\n                    app:layout_constraintEnd_toEndOf=\"@+id/ll_psa\"\r\n                    app:layout_constraintStart_toStartOf=\"@id/ll_language\"\r\n                    app:layout_constraintTop_toBottomOf=\"@+id/tv_title\"\r\n                    >\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/tv_row1_column2\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginStart=\"@dimen/margin_small\"\r\n                        android:text=\"@string/text_set_product_details\"\r\n                        style=\"@style/ProductBlueTextTitle\"/>\r\n\r\n                    <TextView\r\n                        android:ellipsize=\"end\"\r\n                        android:maxLines=\"1\"\r\n                        android:id=\"@+id/tv_row1_colum2\"\r\n                        android:layout_width=\"0dp\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginHorizontal=\"@dimen/margin_extra_small\"\r\n                        android:layout_weight=\"7\"\r\n                        android:text=\"-\"\r\n                        style=\"@style/ProductBlueTextValue\" />\r\n\r\n\r\n                </androidx.appcompat.widget.LinearLayoutCompat>\r\n\r\n                <androidx.appcompat.widget.LinearLayoutCompat\r\n                    android:id=\"@+id/ll_hash\"\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:background=\"@drawable/bg_recipt_bottom\"\r\n                    android:gravity=\"center_vertical\"\r\n                    android:orientation=\"horizontal\"\r\n                    android:paddingVertical=\"@dimen/padding_light\"\r\n                    app:layout_constraintEnd_toEndOf=\"@+id/ll_foil\"\r\n                    app:layout_constraintStart_toStartOf=\"@id/ll_foil\"\r\n                    app:layout_constraintTop_toTopOf=\"@+id/ll_set\"\r\n                    app:layout_constraintBottom_toBottomOf=\"@+id/ll_set\">\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/tv_hash\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginStart=\"@dimen/margin_small\"\r\n                        android:text=\"#\"\r\n                        style=\"@style/ProductBlueTextTitle\"/>\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/tv_hash_value\"\r\n                        android:layout_width=\"0dp\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginHorizontal=\"@dimen/margin_extra_small\"\r\n                        android:layout_weight=\"7\"\r\n                        android:gravity=\"center\"\r\n                        android:text=\"-\"\r\n                        style=\"@style/ProductBlueTextValue\" />\r\n                </androidx.appcompat.widget.LinearLayoutCompat>\r\n\r\n                <androidx.appcompat.widget.LinearLayoutCompat\r\n                    android:id=\"@+id/ll_language\"\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginTop=\"@dimen/margin_mini\"\r\n                    android:layout_marginBottom=\"@dimen/margin_extra_small\"\r\n                    android:layout_marginStart=\"@dimen/margin_extra_small\"\r\n                    android:background=\"@drawable/bg_recipt_bottom\"\r\n                    android:gravity=\"center_vertical\"\r\n                    android:orientation=\"horizontal\"\r\n                    android:paddingVertical=\"@dimen/padding_light\"\r\n                    app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                    app:layout_constraintEnd_toStartOf=\"@+id/ll_psa\"\r\n                    app:layout_constraintHorizontal_bias=\"0.5\"\r\n                    app:layout_constraintStart_toStartOf=\"parent\"\r\n                    app:layout_constraintTop_toBottomOf=\"@+id/ll_set\">\r\n\r\n                    <androidx.appcompat.widget.AppCompatImageView\r\n                        android:id=\"@+id/iv_glob\"\r\n                        android:layout_width=\"@dimen/size_glob\"\r\n                        android:layout_height=\"@dimen/size_glob\"\r\n                        android:layout_marginStart=\"@dimen/margin_small\"\r\n                        android:src=\"@drawable/ic_glob\"\r\n                        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                        app:layout_constraintStart_toStartOf=\"parent\"\r\n                        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/tv_language\"\r\n                        android:layout_width=\"0dp\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginHorizontal=\"@dimen/margin_extra_small\"\r\n                        android:layout_weight=\"7\"\r\n                        android:gravity=\"center\"\r\n                        android:text=\"-\"\r\n                        style=\"@style/ProductBlueTextValue\"/>\r\n                </androidx.appcompat.widget.LinearLayoutCompat>\r\n\r\n                <androidx.appcompat.widget.LinearLayoutCompat\r\n                    android:id=\"@+id/ll_psa\"\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginHorizontal=\"@dimen/margin_mini\"\r\n                    android:background=\"@drawable/bg_recipt_bottom\"\r\n                    android:gravity=\"center_vertical\"\r\n                    android:orientation=\"horizontal\"\r\n                    android:paddingVertical=\"@dimen/padding_light\"\r\n                    app:layout_constraintBottom_toBottomOf=\"@+id/ll_language\"\r\n                    app:layout_constraintEnd_toStartOf=\"@+id/ll_foil\"\r\n                    app:layout_constraintHorizontal_bias=\"0.5\"\r\n                    app:layout_constraintStart_toEndOf=\"@+id/ll_language\"\r\n                    app:layout_constraintTop_toTopOf=\"@+id/ll_language\">\r\n\r\n                    <androidx.appcompat.widget.AppCompatTextView\r\n                        android:id=\"@+id/tv_condition\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginStart=\"@dimen/margin_extra_small\"\r\n                        android:text=\"@string/text_product_psa\"\r\n                        style=\"@style/ProductBlueTextTitle\"\r\n                        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                        app:layout_constraintStart_toEndOf=\"@+id/line_glob\"\r\n                        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/tv_condition_value\"\r\n                        android:layout_width=\"0dp\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginHorizontal=\"@dimen/margin_extra_small\"\r\n                        android:layout_weight=\"7\"\r\n                        android:gravity=\"center\"\r\n                        android:text=\"-\"\r\n                        style=\"@style/ProductBlueTextValue\"/>\r\n                </androidx.appcompat.widget.LinearLayoutCompat>\r\n\r\n                <androidx.appcompat.widget.LinearLayoutCompat\r\n                    android:id=\"@+id/ll_foil\"\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginRight=\"@dimen/margin_normal\"\r\n                    android:background=\"@drawable/bg_recipt_bottom\"\r\n                    android:gravity=\"center_vertical\"\r\n                    android:orientation=\"horizontal\"\r\n                    android:paddingVertical=\"@dimen/padding_light\"\r\n                    app:layout_constraintBottom_toBottomOf=\"@+id/ll_language\"\r\n                    app:layout_constraintEnd_toEndOf=\"parent\"\r\n                    app:layout_constraintHorizontal_bias=\"0.5\"\r\n                    app:layout_constraintStart_toEndOf=\"@+id/ll_psa\"\r\n                    app:layout_constraintTop_toTopOf=\"@+id/ll_language\">\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/tv_edition_value\"\r\n                        android:layout_width=\"0dp\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginHorizontal=\"@dimen/margin_extra_small\"\r\n                        android:layout_weight=\"7\"\r\n                        android:gravity=\"center\"\r\n                        android:text=\"-\"\r\n                        style=\"@style/ProductBlueTextValue\"/>\r\n                </androidx.appcompat.widget.LinearLayoutCompat>\r\n\r\n                <androidx.appcompat.widget.LinearLayoutCompat\r\n                    android:id=\"@+id/ll_sealed_set\"\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginHorizontal=\"@dimen/margin_extra_small\"\r\n                    android:layout_marginTop=\"@dimen/margin_small\"\r\n                    android:layout_marginBottom=\"@dimen/margin_bottom_feed\"\r\n                    android:background=\"@drawable/bg_recipt_bottom\"\r\n                    android:gravity=\"center_vertical\"\r\n                    android:orientation=\"horizontal\"\r\n                    android:paddingVertical=\"@dimen/padding_light\"\r\n                    app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                    app:layout_constraintEnd_toEndOf=\"parent\"\r\n                    app:layout_constraintStart_toStartOf=\"parent\"\r\n                    app:layout_constraintTop_toBottomOf=\"@+id/tv_title\">\r\n\r\n\r\n                    <TextView\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginStart=\"@dimen/margin_small\"\r\n                        android:text=\"@string/text_set_product_details\"\r\n                        android:textColor=\"@color/light_blue\"\r\n                        android:textSize=\"@dimen/text_size_small\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/tv_sealed_set\"\r\n                        android:layout_width=\"0dp\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginHorizontal=\"@dimen/margin_extra_small\"\r\n                        android:layout_weight=\"7\"\r\n                        android:fontFamily=\"@font/lato\"\r\n                        android:text=\"Collector's Edition\"\r\n                        android:textColor=\"@color/black\"\r\n                        android:textSize=\"@dimen/text_size_small\" />\r\n\r\n\r\n                </androidx.appcompat.widget.LinearLayoutCompat>\r\n\r\n                <androidx.appcompat.widget.LinearLayoutCompat\r\n                    android:id=\"@+id/ll_toy_License\"\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginHorizontal=\"@dimen/margin_extra_small\"\r\n                    android:layout_marginTop=\"@dimen/margin_small\"\r\n                    android:background=\"@drawable/bg_recipt_bottom\"\r\n                    android:gravity=\"center_vertical\"\r\n                    android:orientation=\"horizontal\"\r\n                    android:paddingVertical=\"@dimen/padding_light\"\r\n                    app:layout_constraintEnd_toEndOf=\"parent\"\r\n                    app:layout_constraintStart_toStartOf=\"parent\"\r\n                    app:layout_constraintTop_toBottomOf=\"@+id/tv_title\">\r\n\r\n\r\n                    <TextView\r\n                        android:layout_width=\"0dp\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginStart=\"@dimen/margin_small\"\r\n                        android:layout_weight=\"1.5\"\r\n                        android:text=\"@string/text_feed_license\"\r\n                        android:textColor=\"@color/light_blue\"\r\n                        android:textSize=\"@dimen/text_size_small\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/tv_toy_license\"\r\n                        android:layout_width=\"0dp\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginHorizontal=\"@dimen/margin_extra_small\"\r\n                        android:layout_weight=\"7\"\r\n                        android:fontFamily=\"@font/lato\"\r\n                        android:text=\"Pokemon\"\r\n                        android:textColor=\"@color/black\"\r\n                        android:textSize=\"@dimen/text_size_small\" />\r\n\r\n\r\n                </androidx.appcompat.widget.LinearLayoutCompat>\r\n\r\n                <androidx.appcompat.widget.LinearLayoutCompat\r\n                    android:id=\"@+id/ll_toy_hash\"\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginTop=\"@dimen/margin_mini\"\r\n                    android:layout_marginBottom=\"@dimen/margin_extra_small\"\r\n                    android:layout_marginHorizontal=\"@dimen/margin_extra_small\"\r\n                    android:background=\"@drawable/bg_recipt_bottom\"\r\n                    android:gravity=\"center_vertical\"\r\n                    android:orientation=\"horizontal\"\r\n                    android:paddingVertical=\"@dimen/padding_light\"\r\n                    app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                    app:layout_constraintEnd_toEndOf=\"parent\"\r\n                    app:layout_constraintStart_toStartOf=\"parent\"\r\n                    app:layout_constraintTop_toBottomOf=\"@+id/ll_toy_License\">\r\n\r\n\r\n                    <TextView\r\n                        android:layout_width=\"0dp\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginStart=\"@dimen/margin_small\"\r\n                        android:layout_weight=\"1.5\"\r\n                        android:text=\"@string/text_feed_hash\"\r\n                        android:textColor=\"@color/light_blue\"\r\n                        android:textSize=\"@dimen/text_size_small\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/tv_toy_hash\"\r\n                        android:layout_width=\"0dp\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginHorizontal=\"@dimen/margin_extra_small\"\r\n                        android:layout_weight=\"7\"\r\n                        android:fontFamily=\"@font/lato\"\r\n                        android:text=\"998\"\r\n                        android:textColor=\"@color/black\"\r\n                        android:textSize=\"@dimen/text_size_small\" />\r\n\r\n\r\n                </androidx.appcompat.widget.LinearLayoutCompat>\r\n\r\n                <androidx.constraintlayout.widget.Group\r\n                    android:id=\"@+id/group_card\"\r\n\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    app:constraint_referenced_ids=\"ll_hash,ll_psa,ll_foil,ll_language,ll_set\" />\r\n\r\n                <androidx.constraintlayout.widget.Group\r\n                    android:id=\"@+id/group_sealed\"\r\n                    android:visibility=\"gone\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    app:constraint_referenced_ids=\"ll_sealed_set\" />\r\n\r\n                <androidx.constraintlayout.widget.Group\r\n                    android:id=\"@+id/group_toy\"\r\n                    android:visibility=\"gone\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    app:constraint_referenced_ids=\"ll_toy_License,ll_toy_hash\" />\r\n\r\n\r\n\r\n            </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n        </com.google.android.material.card.MaterialCardView>\r\n\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n</layout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/item_feed.xml b/app/src/main/res/layout/item_feed.xml
--- a/app/src/main/res/layout/item_feed.xml	(revision d55e31e7fe7256fcb31400a634daf560d9d85913)
+++ b/app/src/main/res/layout/item_feed.xml	(date 1633096763712)
@@ -253,6 +253,8 @@
                         app:layout_constraintTop_toTopOf="parent" />
 
                     <TextView
+                        android:ellipsize="end"
+                        android:maxLines="1"
                         android:id="@+id/tv_language"
                         android:layout_width="0dp"
                         android:layout_height="wrap_content"
@@ -290,6 +292,8 @@
                         app:layout_constraintTop_toTopOf="parent" />
 
                     <TextView
+                        android:ellipsize="end"
+                        android:maxLines="1"
                         android:id="@+id/tv_condition_value"
                         android:layout_width="0dp"
                         android:layout_height="wrap_content"
@@ -316,6 +320,8 @@
                     app:layout_constraintTop_toTopOf="@+id/ll_language">
 
                     <TextView
+                        android:ellipsize="end"
+                        android:maxLines="1"
                         android:id="@+id/tv_edition_value"
                         android:layout_width="0dp"
                         android:layout_height="wrap_content"
Index: app/src/main/java/com/gthr/gthrcollect/ui/askflow/afbuyingdirectlyplace/AfBuyDirectlyPlaceFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.gthr.gthrcollect.ui.askflow.afbuyingdirectlyplace\r\n\r\nimport android.app.Activity\r\nimport android.content.Intent\r\nimport android.os.Build\r\nimport android.widget.ImageView\r\nimport android.widget.TextView\r\nimport androidx.appcompat.widget.AppCompatImageView\r\nimport androidx.appcompat.widget.AppCompatTextView\r\nimport androidx.constraintlayout.widget.Group\r\nimport androidx.fragment.app.activityViewModels\r\nimport androidx.lifecycle.lifecycleScope\r\nimport androidx.navigation.fragment.findNavController\r\nimport com.google.android.material.bottomsheet.BottomSheetDialog\r\nimport com.gthr.gthrcollect.R\r\nimport com.gthr.gthrcollect.data.repository.AskFlowRepository\r\nimport com.gthr.gthrcollect.databinding.AfBuyingDirectlyPlaceFragmentBinding\r\nimport com.gthr.gthrcollect.databinding.StripeBottomsheetBinding\r\nimport com.gthr.gthrcollect.model.State\r\nimport com.gthr.gthrcollect.model.domain.ShippingAddressDomainModel\r\nimport com.gthr.gthrcollect.ui.askflow.AskFlowActivity\r\nimport com.gthr.gthrcollect.ui.askflow.AskFlowViewModel\r\nimport com.gthr.gthrcollect.ui.askflow.AskFlowViewModelFactory\r\nimport com.gthr.gthrcollect.ui.askflow.afplaceyourask.AfPlaceYourAskFragment\r\nimport com.gthr.gthrcollect.ui.base.BaseFragment\r\nimport com.gthr.gthrcollect.ui.receiptdetail.ReceiptDetailActivity\r\nimport com.gthr.gthrcollect.ui.settings.SettingsActivity\r\nimport com.gthr.gthrcollect.ui.termsandfaq.TermsAndFaqActivity\r\nimport com.gthr.gthrcollect.utils.constants.StripeConstants\r\nimport com.gthr.gthrcollect.utils.customviews.CustomSecondaryButton\r\nimport com.gthr.gthrcollect.utils.enums.ReceiptType\r\nimport com.gthr.gthrcollect.utils.enums.SettingFlowType\r\nimport com.gthr.gthrcollect.utils.enums.WebViewType\r\nimport com.gthr.gthrcollect.utils.extensions.gone\r\nimport com.gthr.gthrcollect.utils.extensions.isValidPrice\r\nimport com.gthr.gthrcollect.utils.extensions.showToast\r\nimport com.gthr.gthrcollect.utils.extensions.visible\r\nimport com.gthr.gthrcollect.utils.helper.getOrderStatusFromRaw\r\nimport com.gthr.gthrcollect.utils.logger.GthrLogger\r\nimport com.stripe.android.PaymentConfiguration\r\nimport com.stripe.android.Stripe\r\nimport com.stripe.android.getPaymentIntentResult\r\nimport com.stripe.android.model.ConfirmPaymentIntentParams\r\nimport com.stripe.android.model.StripeIntent\r\nimport kotlinx.coroutines.launch\r\n\r\n\r\nclass AfBuyDirectlyPlaceFragment :\r\n    BaseFragment<AskFlowViewModel, AfBuyingDirectlyPlaceFragmentBinding>() {\r\n\r\n    private lateinit var stripe: Stripe\r\n    lateinit var dialog: BottomSheetDialog\r\n\r\n    var mBuyerCharge: String? = null\r\n    var mAppFee: String? = null\r\n    var mSellerPayout: String? = null\r\n    var mClientSecret: String? = null\r\n    var mPaymentMethodId: String? = null\r\n    var isPaymentComplete: Boolean = false\r\n\r\n\r\n    override val mViewModel: AskFlowViewModel by activityViewModels {\r\n        AskFlowViewModelFactory(AskFlowRepository())\r\n    }\r\n\r\n    override fun getViewBinding() = AfBuyingDirectlyPlaceFragmentBinding.inflate(layoutInflater)\r\n\r\n    private lateinit var mBtnNext: CustomSecondaryButton\r\n    private var isTnCCheked = false\r\n\r\n    private lateinit var mIvTermsAndConditions: AppCompatImageView\r\n    private lateinit var mTvTermsAndConditions: AppCompatTextView\r\n    private lateinit var mIvBack: ImageView\r\n\r\n    private lateinit var mGroup: Group\r\n    private lateinit var mGroupBuy: Group\r\n\r\n    private lateinit var mTvRate: AppCompatTextView\r\n    private lateinit var mTvRateValue: AppCompatTextView\r\n    private lateinit var mTvRow1: TextView\r\n    private lateinit var mTvRow1Value: TextView\r\n    private lateinit var mTvRow2: TextView\r\n    private lateinit var mTvRow2Value: TextView\r\n    private lateinit var mTvRow3: TextView\r\n    private lateinit var mTvRow3Value: TextView\r\n    private lateinit var mTvTotalTitle: TextView\r\n    private lateinit var mTvTotalValue: TextView\r\n    private lateinit var mAddressBtn: TextView\r\n    private lateinit var mPayout: TextView\r\n\r\n    override fun onBinding() {\r\n\r\n        PaymentConfiguration.init(requireContext(), StripeConstants.STRIPE_PUBLISHABLE_KEY)\r\n        stripe = Stripe(requireContext(), StripeConstants.STRIPE_PUBLISHABLE_KEY)\r\n\r\n        setHasOptionsMenu(false)\r\n        initViews()\r\n        setUpOnClickListeners()\r\n        setUpObserve()\r\n\r\n    }\r\n\r\n    private fun setUpObserve() {\r\n        mViewModel.mBuyingDirFromSomeOneProPrice.observe(this) {\r\n            mTvRateValue.text = String.format(getString(R.string.rate_common), it)\r\n        }\r\n\r\n        mViewModel.shippingTierInfo.observe(viewLifecycleOwner, {\r\n            it?.peekContent()?.let {\r\n                when (it) {\r\n                    is State.Failed -> {\r\n                    }\r\n                    is State.Loading -> {\r\n                    }\r\n                    is State.Success -> {\r\n\r\n                        mTvRow1Value.text =\r\n                            it.data.frontEndShippingProcessing.isValidPrice().getAddedRate()\r\n                    }\r\n                }\r\n            }\r\n        })\r\n\r\n        mViewModel.paymentData.observe(viewLifecycleOwner) {\r\n            it.contentIfNotHandled.let {\r\n                when (it) {\r\n                    is State.Loading -> {\r\n                        (activity as AskFlowActivity)?.showProgressBar()\r\n                    }\r\n                    is State.Success -> {\r\n                        (activity as AskFlowActivity)?.showProgressBar(false)\r\n\r\n                        GthrLogger.e(\"paymentData\", it.data.clientSecret!!)\r\n\r\n                        mBuyerCharge = it.data.buyerCharge\r\n                        mAppFee = it.data.appFee\r\n                        mSellerPayout = it.data.sellerPayout\r\n                        mClientSecret = it.data.clientSecret\r\n\r\n                        showBottomSheet(mClientSecret!!)\r\n                    }\r\n                    is State.Failed -> {\r\n                        (activity as AskFlowActivity)?.showProgressBar(false)\r\n                        showToast(it.message)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        mViewModel.buyNowData.observe(viewLifecycleOwner) {\r\n            it.contentIfNotHandled.let {\r\n                when (it) {\r\n                    is State.Loading -> {\r\n                        (activity as AskFlowActivity)?.showProgressBar()\r\n                    }\r\n                    is State.Success -> {\r\n                        (activity as AskFlowActivity)?.showProgressBar(false)\r\n\r\n                        //  showToast(it.data.toString())\r\n                        GthrLogger.e(\"buyNowData\", it.data.toString())\r\n\r\n                        startActivity(\r\n                            ReceiptDetailActivity.getInstance(\r\n                                requireContext(),\r\n                                ReceiptType.PURCHASED,\r\n                                it.data,\r\n                                getOrderStatusFromRaw(it.data.orderStatus.toString())\r\n                            )\r\n                        )\r\n                        activity?.finish()\r\n                    }\r\n                    is State.Failed -> {\r\n                        (activity as AskFlowActivity)?.showProgressBar(false)\r\n                        showToast(it.message)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private fun showBottomSheet(paymentIntentClientSecret: String) {\r\n\r\n        val binding: StripeBottomsheetBinding\r\n        binding = StripeBottomsheetBinding.inflate(layoutInflater)\r\n        dialog = BottomSheetDialog(requireContext(), R.style.DialogStyle)\r\n\r\n        binding.cancelButton.setOnClickListener {\r\n            dialog.setCancelable(false)\r\n            dialog.dismiss()\r\n        }\r\n\r\n        binding.payButtonId.setOnClickListener {\r\n            binding.cardInputWidget.paymentMethodCreateParams?.let { params ->\r\n                (activity as AskFlowActivity).showProgressBar()\r\n                dialog.setCancelable(false)\r\n                val confirmParams = ConfirmPaymentIntentParams.createWithPaymentMethodCreateParams(\r\n                    params,\r\n                    paymentIntentClientSecret\r\n                )\r\n                stripe.confirmPayment(this, confirmParams)\r\n            }\r\n        }\r\n        dialog.setCancelable(false)\r\n        dialog.setContentView(binding.root)\r\n        dialog.show()\r\n    }\r\n\r\n    private fun setUpOnClickListeners() {\r\n\r\n        mIvBack.setOnClickListener {\r\n            findNavController().navigateUp()\r\n        }\r\n\r\n        mIvTermsAndConditions.setOnClickListener {\r\n            if (!isTnCCheked) {\r\n                isTnCCheked = !isTnCCheked\r\n                toggleTnC(true)\r\n                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\r\n                    mBtnNext.setState(CustomSecondaryButton.State.BLUE_GRADIENT)\r\n                }\r\n            } else {\r\n                isTnCCheked = !isTnCCheked\r\n                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\r\n                    mBtnNext.setState(CustomSecondaryButton.State.DISABLE)\r\n                }\r\n                toggleTnC(false)\r\n            }\r\n        }\r\n\r\n        mBtnNext.setOnClickListener {\r\n\r\n             if (mClientSecret.isNullOrEmpty()) {\r\n                 mViewModel.generateClientSecret(getAskRefKey(), getShippingTeirKey())\r\n             } else {\r\n                 showBottomSheet(mClientSecret!!)\r\n             }\r\n\r\n\r\n/*\r\n            mViewModel.productDisplayModel?.forsaleItemNodel?.let {\r\n\r\n                val aa = ReceiptDomainModel(\r\n                    imageUrl = it.productFirImageURL,\r\n                    totalAskPrice = it.price,\r\n                    shippingReimbursement = 1.23,\r\n                    refKey = it.askRefKey,\r\n                    itemRefKey = it.itemRefKey,\r\n                    productType = it.productType,\r\n                    objectID = it.itemObjectID,\r\n                    buyerCharge = mViewModel.totalPaymentRate.toString(),\r\n                    sellerPayout = \"52.27\",\r\n                    appFee = \"11.72\",\r\n                    paymentID = \"123\",\r\n                    buyerUID = \"123\",\r\n                    sellerUID = \"123\",\r\n                    date = \"9/29/2021\",\r\n                    saleID = \"123\",\r\n                    trackingNumber = \"123\",\r\n                    abbrevaitedPaymentNumber = \"123\",\r\n                    paymentProvider = \"123\",\r\n                    trackingLink = \"123\",\r\n                    orderStatus = \"123\",\r\n                    \"Tier\",\r\n                    \"Name\",\r\n                    \"Address1\",\r\n                    \"Address2\",\r\n                    \"123\",\r\n                    \"Owings Mills 2\",\r\n                    \"113233\",\r\n                    \"123\",\r\n                    \"123\",\r\n                    \"123\",\r\n                    \"123\",\r\n                    \"Owings Mills\",\r\n                    \"MD\",\r\n                    \"21117\",\r\n                    \"Country\",\r\n                    edition = it.edition,\r\n                    lang = it.language?.key,\r\n                    condition = it.condition?.displayName,\r\n                    \"DELIVERED\"\r\n                )\r\n\r\n                startActivity(\r\n                    ReceiptDetailActivity.getInstance(\r\n                        requireContext(),\r\n                        ReceiptType.PURCHASED,\r\n                        aa,\r\n                        CustomDeliveryButton.OrderStatus.DELIVERED\r\n                    )\r\n                )\r\n\r\n            }\r\n*/\r\n\r\n\r\n        }\r\n\r\n        mTvTermsAndConditions.setOnClickListener {\r\n            startActivity(\r\n                TermsAndFaqActivity.getInstance(\r\n                    requireContext(),\r\n                    WebViewType.TERMS_AND_CONDITION\r\n                )\r\n            )\r\n        }\r\n\r\n        mAddressBtn.setOnClickListener {\r\n\r\n            startActivityForResult(\r\n                SettingsActivity.getInstance(\r\n                    requireContext(),\r\n                    SettingFlowType.SHIPPING_ADDRESS\r\n                ), AfPlaceYourAskFragment.ADDRESS_REQUEST_CODE\r\n            )\r\n\r\n        }\r\n\r\n        mPayout.setOnClickListener {\r\n            //     mViewModel.generateClientSecret(\"-MkVqcXil5KoYq7JA_-3\", \"0\")\r\n\r\n            if (!isTnCCheked){\r\n               showToast(getString(R.string.term_condition_note))\r\n                return@setOnClickListener\r\n            }\r\n            if (mClientSecret.isNullOrEmpty()) {\r\n                mViewModel.generateClientSecret(getAskRefKey(), getShippingTeirKey())\r\n            } else {\r\n                showBottomSheet(mClientSecret!!)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {\r\n        super.onActivityResult(requestCode, resultCode, data)\r\n\r\n        if (data != null) {\r\n\r\n            if (stripe.isPaymentResult(requestCode, data)) {\r\n                lifecycleScope.launch {\r\n                    runCatching {\r\n                        stripe.getPaymentIntentResult(requestCode, data!!).intent\r\n                    }.fold(\r\n                        onSuccess = { paymentIntent ->\r\n\r\n                            val status = paymentIntent.status\r\n                            if (status == StripeIntent.Status.Succeeded) {\r\n\r\n                                (activity as AskFlowActivity)?.showProgressBar(true)\r\n\r\n\r\n                                isPaymentComplete = true\r\n                                mClientSecret = null\r\n                                dialog.setCancelable(false)\r\n                                mPaymentMethodId = paymentIntent.paymentMethod?.id.toString()\r\n\r\n                                dialog.dismiss()\r\n\r\n                                //    buyNowFunction(mPaymentMethodId.toString())\r\n\r\n                                mViewModel.createBuyNow(\r\n                                    getAskRefKey(),\r\n                                    mBuyerCharge,\r\n                                    mViewModel.mAddress?.addresKey.toString(),\r\n                                    \"0\",\r\n                                    getShippingTeirKey(),\r\n                                    mAppFee,\r\n                                    mPaymentMethodId,\r\n                                    mSellerPayout\r\n                                )\r\n\r\n\r\n                                showToast(\"Payment succeeded\")\r\n\r\n                            } else if (status == StripeIntent.Status.RequiresPaymentMethod) {\r\n\r\n                                dialog.setCancelable(false)\r\n                                dialog.dismiss()\r\n                                isPaymentComplete = false\r\n                                mClientSecret = null\r\n                                showToast(\"Payment failed\")\r\n                                (activity as AskFlowActivity)?.showProgressBar(false)\r\n\r\n                            }\r\n                        },\r\n                        onFailure = {\r\n                            dialog.setCancelable(false)\r\n                            dialog.dismiss()\r\n                            isPaymentComplete = false\r\n                            mClientSecret = null\r\n                            showToast(\"Payment failed\")\r\n                            (activity as AskFlowActivity)?.showProgressBar(false)\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n\r\n            if (requestCode == ADDRESS_REQUEST_CODE) {\r\n                if (resultCode == Activity.RESULT_OK) {\r\n                    val address = data.getParcelableExtra<ShippingAddressDomainModel>(KEY_ADDRESS)!!\r\n                    mViewModel.setAddress(address)\r\n                    (activity as AskFlowActivity)?.showProgressBar(false)\r\n\r\n                    //  showToast(address.addresKey.toString())\r\n                    GthrLogger.i(\"dsfbvjudrs\", \"onActivityResult: \" + address.addresKey)\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    private fun toggleTnC(toggleOn: Boolean) {\r\n        if (toggleOn) {\r\n            mIvTermsAndConditions.setImageResource(R.drawable.ic_terms_and_conditions_blue)\r\n        } else {\r\n            mIvTermsAndConditions.setImageResource(R.drawable.ic_terms_and_conditions)\r\n        }\r\n    }\r\n\r\n    private fun initViews() {\r\n        mViewBinding.run {\r\n            mIvBack = ivBack\r\n            mBtnNext = btnNext\r\n            mIvTermsAndConditions = ivTermsAndConditions\r\n            mTvTermsAndConditions = tvTermsAndConditions\r\n            mGroup = group\r\n            mGroupBuy = groupBuy\r\n            mTvRate = tvRate\r\n            mTvRateValue = tvRateValue\r\n            mTvRow1 = tvSellingFee\r\n            mTvRow1Value = tvSellingFeeValue\r\n            mTvRow2 = tvPaymentProcessing\r\n            mTvRow2Value = tvPaymentProcessingValue\r\n            mTvRow3 = tvShippingReimbursement\r\n            mTvRow3Value = tvShippingReimbursementValue\r\n            mAddressBtn = tvAddress\r\n            mTvTotalTitle = tvTotal\r\n            mTvTotalValue = tvTotalValue\r\n\r\n            mPayout = tvPayout\r\n        }\r\n\r\n        mTvTotalValue.text = String.format(\r\n            getString(R.string.text_price_value),\r\n            mViewModel.totalPaymentRate.toString().isValidPrice()\r\n        )\r\n\r\n        mGroup.visible()\r\n        mGroupBuy.gone()\r\n        mTvRate.text = getString(R.string.text_price)\r\n        mTvRow1.text = getString(R.string.text_purchase_shipping)\r\n        mTvRow2.text = getString(R.string.text_sales_tax)\r\n        mTvRow2Value.text = getString(R.string.rate_positive, mViewModel.salesTax)\r\n        mTvRow2.gone()\r\n        mTvRow2Value.gone()\r\n\r\n        mTvRow3.gone()\r\n        mTvRow3Value.gone()\r\n        mBtnNext.text = getString(R.string.text_accept)\r\n        mViewBinding.executePendingBindings()\r\n\r\n    }\r\n\r\n    fun String.getAddedRate(): String = \"+$this\"\r\n    fun String.getSubtractedRate(): String = \"-$this\"\r\n\r\n    fun getAskRefKey(): String {\r\n        val ref = mViewModel.productDisplayModel?.forsaleItemNodel?.askRefKey.toString()\r\n        GthrLogger.d(\"ref\", \"$ref\")\r\n        return ref\r\n    }\r\n\r\n    fun getShippingTeirKey(): String {\r\n        return (mViewModel.shippingTierInfo.value?.peekContent() as State.Success).data.tierLevel.toString()\r\n    }\r\n\r\n\r\n    companion object {\r\n\r\n        const val KEY_ADDRESS = \"address\"\r\n        const val ADDRESS_REQUEST_CODE = 123\r\n\r\n\r\n        fun getReturnIntent(shippingAddressDomainModel: ShippingAddressDomainModel) =\r\n            Intent().apply {\r\n                putExtra(KEY_ADDRESS, shippingAddressDomainModel)\r\n            }\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/gthr/gthrcollect/ui/askflow/afbuyingdirectlyplace/AfBuyDirectlyPlaceFragment.kt b/app/src/main/java/com/gthr/gthrcollect/ui/askflow/afbuyingdirectlyplace/AfBuyDirectlyPlaceFragment.kt
--- a/app/src/main/java/com/gthr/gthrcollect/ui/askflow/afbuyingdirectlyplace/AfBuyDirectlyPlaceFragment.kt	(revision d55e31e7fe7256fcb31400a634daf560d9d85913)
+++ b/app/src/main/java/com/gthr/gthrcollect/ui/askflow/afbuyingdirectlyplace/AfBuyDirectlyPlaceFragment.kt	(date 1633096397100)
@@ -229,72 +229,15 @@
         }
 
         mBtnNext.setOnClickListener {
-
-             if (mClientSecret.isNullOrEmpty()) {
-                 mViewModel.generateClientSecret(getAskRefKey(), getShippingTeirKey())
-             } else {
-                 showBottomSheet(mClientSecret!!)
-             }
-
-
-/*
-            mViewModel.productDisplayModel?.forsaleItemNodel?.let {
-
-                val aa = ReceiptDomainModel(
-                    imageUrl = it.productFirImageURL,
-                    totalAskPrice = it.price,
-                    shippingReimbursement = 1.23,
-                    refKey = it.askRefKey,
-                    itemRefKey = it.itemRefKey,
-                    productType = it.productType,
-                    objectID = it.itemObjectID,
-                    buyerCharge = mViewModel.totalPaymentRate.toString(),
-                    sellerPayout = "52.27",
-                    appFee = "11.72",
-                    paymentID = "123",
-                    buyerUID = "123",
-                    sellerUID = "123",
-                    date = "9/29/2021",
-                    saleID = "123",
-                    trackingNumber = "123",
-                    abbrevaitedPaymentNumber = "123",
-                    paymentProvider = "123",
-                    trackingLink = "123",
-                    orderStatus = "123",
-                    "Tier",
-                    "Name",
-                    "Address1",
-                    "Address2",
-                    "123",
-                    "Owings Mills 2",
-                    "113233",
-                    "123",
-                    "123",
-                    "123",
-                    "123",
-                    "Owings Mills",
-                    "MD",
-                    "21117",
-                    "Country",
-                    edition = it.edition,
-                    lang = it.language?.key,
-                    condition = it.condition?.displayName,
-                    "DELIVERED"
-                )
-
-                startActivity(
-                    ReceiptDetailActivity.getInstance(
-                        requireContext(),
-                        ReceiptType.PURCHASED,
-                        aa,
-                        CustomDeliveryButton.OrderStatus.DELIVERED
-                    )
-                )
-
+            if(mViewModel.mAddress?.addresKey==null){
+                showToast("please select address")
+            }else{
+                if (mClientSecret.isNullOrEmpty()) {
+                    mViewModel.generateClientSecret(getAskRefKey(), getShippingTeirKey())
+                } else {
+                    showBottomSheet(mClientSecret!!)
+                }
             }
-*/
-
-
         }
 
         mTvTermsAndConditions.setOnClickListener {
@@ -318,19 +261,21 @@
         }
 
         mPayout.setOnClickListener {
-            //     mViewModel.generateClientSecret("-MkVqcXil5KoYq7JA_-3", "0")
 
-            if (!isTnCCheked){
-               showToast(getString(R.string.term_condition_note))
-                return@setOnClickListener
-            }
-            if (mClientSecret.isNullOrEmpty()) {
-                mViewModel.generateClientSecret(getAskRefKey(), getShippingTeirKey())
-            } else {
-                showBottomSheet(mClientSecret!!)
+            if(mViewModel.mAddress?.addresKey==null){
+                showToast("Please select address!")
+            }else{
+                if (!isTnCCheked){
+                    showToast(getString(R.string.term_condition_note))
+                    return@setOnClickListener
+                }
+                if (mClientSecret.isNullOrEmpty()) {
+                    mViewModel.generateClientSecret(getAskRefKey(), getShippingTeirKey())
+                } else {
+                    showBottomSheet(mClientSecret!!)
+                }
             }
         }
-
     }
 
     override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {
Index: app/src/main/java/com/gthr/gthrcollect/ui/homebottomnav/feed/FeedAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.gthr.gthrcollect.ui.homebottomnav.feed\r\n\r\n\r\nimport android.util.Log\r\nimport android.view.LayoutInflater\r\nimport android.view.ViewGroup\r\nimport androidx.recyclerview.widget.DiffUtil\r\nimport androidx.recyclerview.widget.ListAdapter\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.gthr.gthrcollect.R\r\nimport com.gthr.gthrcollect.databinding.ItemCollectionBinding\r\nimport com.gthr.gthrcollect.databinding.ItemFeedBinding\r\nimport com.gthr.gthrcollect.databinding.ItemLoadMoreBinding\r\nimport com.gthr.gthrcollect.databinding.ItemTestProductBinding\r\nimport com.gthr.gthrcollect.model.domain.FeedDomainModel\r\nimport com.gthr.gthrcollect.model.domain.ReceiptDisplayModel\r\nimport com.gthr.gthrcollect.ui.homebottomnav.search.adapter.ProductAdapter\r\nimport com.gthr.gthrcollect.utils.enums.AdapterViewType\r\nimport com.gthr.gthrcollect.utils.enums.FeedType\r\nimport com.gthr.gthrcollect.utils.enums.ProductCategory\r\nimport com.gthr.gthrcollect.utils.extensions.*\r\nimport com.gthr.gthrcollect.utils.helper.getConditionTitle\r\nimport com.gthr.gthrcollect.utils.helper.getPokemonLanguageDomainModel\r\nimport com.gthr.gthrcollect.utils.logger.GthrLogger\r\n\r\nclass FeedAdapter(val listener: FeedListener) : ListAdapter<FeedDomainModel, RecyclerView.ViewHolder>(DiffCallback){\r\n\r\n    object DiffCallback : DiffUtil.ItemCallback<FeedDomainModel>(){\r\n        override fun areItemsTheSame(oldItem: FeedDomainModel, newItem: FeedDomainModel): Boolean {\r\n            return oldItem.id == oldItem.id\r\n        }\r\n\r\n        override fun areContentsTheSame(oldItem: FeedDomainModel, newItem: FeedDomainModel): Boolean {\r\n            return oldItem == oldItem\r\n        }\r\n    }\r\n\r\n    inner class FeedViewHolder(val binding : ItemFeedBinding): RecyclerView.ViewHolder(binding.root){\r\n        fun bind(){\r\n            val item = getItem(layoutPosition)\r\n            binding.ivProduct.clipToOutline = true\r\n\r\n            item.feedType?.let {\r\n                when(it){\r\n                    FeedType.BID -> setBuyList(binding)\r\n                    FeedType.ASK -> setAsk(binding)\r\n                    FeedType.COLLECTION -> setCollection(binding)\r\n                }\r\n            }\r\n\r\n            item.productCategory?.let {\r\n                when(it){\r\n                    ProductCategory.CARDS -> {\r\n                        setCard(binding)\r\n                        if(item.condition!=null){\r\n                            binding.tvCondition.text = binding.root.context?.getConditionTitle(item.condition.type)\r\n                            binding.tvConditionValue.text = item.condition.abbreviatedName\r\n                        }\r\n                        else{\r\n                            binding.tvCondition.text = \"-\"\r\n                            binding.tvConditionValue.text = \"-\"\r\n                        }\r\n                        binding.tvLanguage.text = if(item.language!=null) getPokemonLanguageDomainModel(item.language?.key).displayName  else \"-\"\r\n                        binding.tvRow1Colum2.text = if(item.product_group.isNullOrEmpty()) \"-\" else item.product_group\r\n                        binding.tvHashValue.text = if(item.product_productNumber.isNullOrEmpty()) \"-\" else item.product_productNumber\r\n                        binding.tvEditionValue.text = if(item.edition.isNullOrEmpty()) \"-\" else item.edition\r\n                    }\r\n                    ProductCategory.SEALED -> {\r\n                        setSealed(binding)\r\n                        binding.tvSealedSet.text = if(item.product_group.isNullOrEmpty()) \"-\" else item.product_group\r\n                    }\r\n                    ProductCategory.TOYS -> {\r\n                        setToy(binding)\r\n                        binding.tvToyLicense.text = \"-\"\r\n                        binding.tvToyHash.text = if(item.product_productNumber.isNullOrEmpty()) \"-\" else item.product_productNumber\r\n                    }\r\n                }\r\n            }\r\n\r\n            binding.tvUserName.text = if(item.collectionDisplayName.isNullOrEmpty()) \"-\" else item.collectionDisplayName\r\n            binding.tvProductType.text = if(item.product_rarity.isNullOrEmpty()) \"-\" else item.product_rarity\r\n            binding.tvTitle.text = if(item.product_productName.isNullOrEmpty()) \"-\" else item.product_productName\r\n            binding.tvPrice.text = item?.price?.let { String.format(binding.tvPrice.context.getString(R.string.rate_common),it.toDouble()) }\r\n\r\n            item.collection_profileImageURL?.let { binding.ivUser.setProfileImage(it) }\r\n\r\n            if(item.frontImageURL.isNullOrEmpty())\r\n                item.product_firImageURL?.let { binding.ivProduct.setProductImage(it) }\r\n            else\r\n                item.frontImageURL?.let { binding.ivProduct.setProductImage(it) }\r\n\r\n            binding.root.setOnClickListener {\r\n                listener.onClick(item)\r\n            }\r\n\r\n            binding.ivShare.setOnClickListener {\r\n                listener.share(item)\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    inner class ItemLoadMoreViewHolder(val binding: ItemLoadMoreBinding) : RecyclerView.ViewHolder(binding.root)\r\n\r\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): RecyclerView.ViewHolder =\r\n        if (viewType == AdapterViewType.VIEW_TYPE_ITEM.value)\r\n            FeedViewHolder(ItemFeedBinding.inflate(LayoutInflater.from(parent.context),parent,false))\r\n        else\r\n            ItemLoadMoreViewHolder(ItemLoadMoreBinding.inflate(LayoutInflater.from(parent.context), parent, false))\r\n\r\n\r\n\r\n    override fun onBindViewHolder(holder: RecyclerView.ViewHolder, position: Int) {\r\n        if(getItem(position).viewType== AdapterViewType.VIEW_TYPE_ITEM)\r\n            (holder as FeedViewHolder).bind()\r\n    }\r\n\r\n\r\n    override fun getItemViewType(position: Int): Int {\r\n        return getItem(position).viewType.value\r\n    }\r\n\r\n    private fun setCollection(binding: ItemFeedBinding) {\r\n        binding.tvNewTo.text = binding.tvNewTo.context.getString(R.string.text_feed_new_to_collection)\r\n        binding.tvNewTo.setTextColor(binding.tvNewTo.getResolvedColor(R.color.text_color_dark_green))\r\n        binding.btnBuyNow.gone()\r\n        binding.tvPrice.gone()\r\n    }\r\n\r\n    private fun setAsk(binding: ItemFeedBinding) {\r\n        binding.tvNewTo.text = binding.tvNewTo.context.getString(R.string.text_feed_new_ask)\r\n        binding.tvNewTo.setTextColor(binding.tvNewTo.getResolvedColor(R.color.red))\r\n        binding.btnBuyNow.visible()\r\n        binding.tvPrice.visible()\r\n    }\r\n\r\n    private fun setBuyList(binding: ItemFeedBinding) {\r\n        binding.tvNewTo.text = binding.tvNewTo.context.getString(R.string.text_feed_new_to_buy_list)\r\n        binding.tvNewTo.setTextColor(binding.tvNewTo.getResolvedColor(R.color.text_color_dark_green))\r\n        binding.btnBuyNow.gone()\r\n        binding.tvPrice.visible()\r\n    }\r\n\r\n    private fun setToy(binding: ItemFeedBinding) {\r\n        binding.groupToy.visible()\r\n        binding.groupCard.gone()\r\n        binding.groupSealed.gone()\r\n    }\r\n\r\n    private fun setSealed(binding: ItemFeedBinding) {\r\n        binding.groupToy.gone()\r\n        binding.groupCard.gone()\r\n        binding.groupSealed.visible()\r\n    }\r\n\r\n    private fun setCard(binding: ItemFeedBinding) {\r\n        binding.groupToy.gone()\r\n        binding.groupCard.visible()\r\n        binding.groupSealed.gone()\r\n    }\r\n\r\n    interface FeedListener {\r\n        fun onClick(feedDomainModel: FeedDomainModel)\r\n        fun share(feedDomainModel: FeedDomainModel)\r\n        fun goToProfile(feedDomainModel: FeedDomainModel)\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/gthr/gthrcollect/ui/homebottomnav/feed/FeedAdapter.kt b/app/src/main/java/com/gthr/gthrcollect/ui/homebottomnav/feed/FeedAdapter.kt
--- a/app/src/main/java/com/gthr/gthrcollect/ui/homebottomnav/feed/FeedAdapter.kt	(revision d55e31e7fe7256fcb31400a634daf560d9d85913)
+++ b/app/src/main/java/com/gthr/gthrcollect/ui/homebottomnav/feed/FeedAdapter.kt	(date 1633096211361)
@@ -54,7 +54,7 @@
                         setCard(binding)
                         if(item.condition!=null){
                             binding.tvCondition.text = binding.root.context?.getConditionTitle(item.condition.type)
-                            binding.tvConditionValue.text = item.condition.abbreviatedName
+                            binding.tvConditionValue.text = item.condition.displayName
                         }
                         else{
                             binding.tvCondition.text = "-"
@@ -64,21 +64,23 @@
                         binding.tvRow1Colum2.text = if(item.product_group.isNullOrEmpty()) "-" else item.product_group
                         binding.tvHashValue.text = if(item.product_productNumber.isNullOrEmpty()) "-" else item.product_productNumber
                         binding.tvEditionValue.text = if(item.edition.isNullOrEmpty()) "-" else item.edition
+                        binding.tvProductType.text = if(item.product_rarity.isNullOrEmpty()) "-" else item.product_rarity
                     }
                     ProductCategory.SEALED -> {
                         setSealed(binding)
                         binding.tvSealedSet.text = if(item.product_group.isNullOrEmpty()) "-" else item.product_group
+                        binding.tvProductType.text = if(item.productType?.title.isNullOrEmpty()) "-" else item.productType?.title
                     }
                     ProductCategory.TOYS -> {
                         setToy(binding)
                         binding.tvToyLicense.text = "-"
+                        binding.tvProductType.text = if(item.productType?.title.isNullOrEmpty()) "-" else item.productType?.title
                         binding.tvToyHash.text = if(item.product_productNumber.isNullOrEmpty()) "-" else item.product_productNumber
                     }
                 }
             }
 
             binding.tvUserName.text = if(item.collectionDisplayName.isNullOrEmpty()) "-" else item.collectionDisplayName
-            binding.tvProductType.text = if(item.product_rarity.isNullOrEmpty()) "-" else item.product_rarity
             binding.tvTitle.text = if(item.product_productName.isNullOrEmpty()) "-" else item.product_productName
             binding.tvPrice.text = item?.price?.let { String.format(binding.tvPrice.context.getString(R.string.rate_common),it.toDouble()) }
 
Index: app/src/main/java/com/gthr/gthrcollect/ui/homebottomnav/feed/FeedFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.gthr.gthrcollect.ui.homebottomnav.feed\r\n\r\nimport android.content.Intent\r\nimport android.util.Log\r\nimport androidx.fragment.app.viewModels\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.gthr.gthrcollect.GthrCollect\r\nimport com.gthr.gthrcollect.data.repository.DynamicLinkRepository\r\nimport com.gthr.gthrcollect.data.repository.FeedRepository\r\nimport com.gthr.gthrcollect.databinding.FeedFragmentBinding\r\nimport com.gthr.gthrcollect.model.State\r\nimport com.gthr.gthrcollect.model.domain.FeedDomainModel\r\nimport com.gthr.gthrcollect.model.domain.ForSaleItemDomainModel\r\nimport com.gthr.gthrcollect.model.domain.ProductDisplayModel\r\nimport com.gthr.gthrcollect.ui.askflow.AskFlowActivity\r\nimport com.gthr.gthrcollect.ui.base.BaseFragment\r\nimport com.gthr.gthrcollect.ui.editaccountinfo.EditAccountInfoActivity\r\nimport com.gthr.gthrcollect.ui.homebottomnav.HomeBottomNavActivity\r\nimport com.gthr.gthrcollect.ui.productdetail.productdetailscreen.ProductDetailFragment\r\nimport com.gthr.gthrcollect.ui.profile.ProfileActivity\r\nimport com.gthr.gthrcollect.utils.customviews.CustomCollectionTypeView\r\nimport com.gthr.gthrcollect.utils.enums.*\r\nimport com.gthr.gthrcollect.utils.extensions.isUserGovIdVerified\r\nimport com.gthr.gthrcollect.utils.extensions.isUserLoggedIn\r\nimport com.gthr.gthrcollect.utils.extensions.showToast\r\nimport com.gthr.gthrcollect.utils.logger.GthrLogger\r\nimport kotlinx.coroutines.Job\r\nimport kotlinx.coroutines.MainScope\r\nimport kotlinx.coroutines.launch\r\n\r\nclass FeedFragment : BaseFragment<FeedViewModel, FeedFragmentBinding>() {\r\n\r\n    override fun getViewBinding() = FeedFragmentBinding.inflate(layoutInflater)\r\n    override val mViewModel: FeedViewModel by viewModels{\r\n        FeedViewModelFactory(\r\n            FeedRepository(),\r\n            DynamicLinkRepository()\r\n        )\r\n    }\r\n\r\n    private var mainJob: Job? = null\r\n\r\n    private lateinit var mAll: CustomCollectionTypeView\r\n    private lateinit var mCards: CustomCollectionTypeView\r\n    private lateinit var mSealed: CustomCollectionTypeView\r\n    private lateinit var mFunko: CustomCollectionTypeView\r\n\r\n    private lateinit var mRvMain : RecyclerView\r\n    private lateinit var mAdapter: FeedAdapter\r\n\r\n    //List of Collection filter views\r\n    private lateinit var mCctvList: List<CustomCollectionTypeView>\r\n\r\n    //Filter var\r\n    private var mProductCategory: ProductCategory? = null\r\n    private var mCreatorUID: String? = null\r\n\r\n    private var mLimit : Int = 60\r\n    private var mPage: Int = 0\r\n\r\n    //Paging\r\n    private var mIsLoading = false\r\n    private var mHasNext = true\r\n\r\n    override fun onBinding() {\r\n        initViews()\r\n        setUpClickListeners()\r\n        setUpFeedRecyclerView()\r\n        setUpObserver()\r\n        getFeed(0,null,GthrCollect.prefs?.collectionInfoModel?.userRefKey?:null)\r\n    }\r\n\r\n    private fun getFeed(page: Int, productCategory: ProductCategory?, creatorUID: String?,setReset: Boolean = false){\r\n        if (setReset)\r\n            resetFeed()\r\n\r\n        mPage = page\r\n        mProductCategory = productCategory\r\n        mCreatorUID = creatorUID\r\n        mViewModel.fetchFeed(mLimit,mPage,mProductCategory,mCreatorUID)\r\n    }\r\n\r\n    private fun setUpObserver() {\r\n\r\n        mViewModel.mDynamicLink.observe(this){\r\n            it.contentIfNotHandled?.let {\r\n                when (it) {\r\n                    is State.Loading -> showProgressBar()\r\n                    is State.Success -> {\r\n                        showProgressBar(false)\r\n                        val intent = Intent()\r\n                        // val msg = \"Click and install this application $shortLink Refer code : mayankbaba\"\r\n                        intent.action = Intent.ACTION_SEND\r\n                        intent.putExtra(Intent.EXTRA_TEXT, it.data)\r\n                        intent.type = \"text/plain\"\r\n                        startActivity(intent)\r\n                    }\r\n                    is State.Failed -> showProgressBar(false)\r\n                }\r\n            }\r\n        }\r\n\r\n        mViewModel.mFeedDisplayList.observe(this){\r\n            val list = it.map { it.copy() }\r\n            mAdapter.submitList(list)\r\n            GthrLogger.i(\"dscndskc\", \"=====================\")\r\n            list.forEach {\r\n                GthrLogger.i(\"dscndskc\", \"${it.id}\")\r\n            }\r\n\r\n        }\r\n\r\n        mViewModel.mFeedList.observe(this){\r\n            it.contentIfNotHandled?.let {\r\n                when (it) {\r\n                    is State.Loading -> {\r\n                        if (mPage == 0)\r\n                            showProgressBar()\r\n                        else\r\n                            mViewModel.addFeedDisplayListLoadMore()\r\n                    }\r\n                    is State.Failed -> {\r\n                        showProgressBar(false)\r\n                        showToast(it.message)\r\n                        mIsLoading = false\r\n                        if (mPage == 0)\r\n                            showProgressBar(false)\r\n                        else\r\n                            mViewModel.removeFeedDisplayListLoadMore()\r\n                    }\r\n                    is State.Success -> {\r\n                        showProgressBar(false)\r\n                        mViewModel.setFeedDisplayList(it.data)\r\n                        if (it.data.size < mLimit) {\r\n                            mHasNext = false\r\n                            GthrLogger.e(\"mayank\", \"data: ${mHasNext}\")\r\n                        }\r\n                        mIsLoading = false\r\n                        mPage++\r\n                        GthrLogger.e(\"observedata\", \"data: ${it.data}\")\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private fun setUpFeedRecyclerView() {\r\n        mAdapter = FeedAdapter(object : FeedAdapter.FeedListener{\r\n            override fun onClick(feedDomainModel: FeedDomainModel) {\r\n                if(feedDomainModel.feedType==FeedType.ASK)\r\n                    if (GthrCollect.prefs?.isUserLoggedIn() == true)\r\n                        startActivity(AskFlowActivity.getInstance(requireContext(), AskFlowType.BUY_DIRECTLY_FROM_SOMEONE, ProductDisplayModel(ForSaleItemDomainModel(feedDomainModel))))\r\n                    else\r\n                        startActivity(HomeBottomNavActivity.getInstance(requireContext(), goToProfileSignUp = true))\r\n\r\n                else if (feedDomainModel.feedType==FeedType.COLLECTION)\r\n                    startActivity(ProfileActivity.getInstance(requireContext(), ProfileNavigationType.PROFILE,feedDomainModel.collection_firebaseRef))\r\n            }\r\n\r\n            override fun goToProfile(feedDomainModel: FeedDomainModel) {\r\n                startActivity(ProfileActivity.getInstance(requireContext(), ProfileNavigationType.PROFILE,feedDomainModel.collection_firebaseRef))\r\n            }\r\n\r\n            override fun share(feedDomainModel: FeedDomainModel) {\r\n                if(feedDomainModel.feedType==FeedType.BID&&feedDomainModel.feedType==FeedType.ASK)\r\n                    if(feedDomainModel.product_prodObjectID!=null&&feedDomainModel.productType!=null)\r\n                        mViewModel.getProductDynamicLink(feedDomainModel.product_prodObjectID,feedDomainModel.productType)\r\n                if(feedDomainModel.feedType==FeedType.COLLECTION)\r\n                    if(feedDomainModel.collection_firebaseRef!=null)\r\n                        mViewModel.getCollectionsDynamicLink(feedDomainModel.collection_firebaseRef)\r\n\r\n            }\r\n        })\r\n        val linearLayoutManager = LinearLayoutManager(requireContext())\r\n        mRvMain.apply {\r\n            layoutManager = linearLayoutManager\r\n            adapter = mAdapter\r\n        }\r\n\r\n        mRvMain.addOnScrollListener(object : RecyclerView.OnScrollListener() {\r\n            override fun onScrollStateChanged(recyclerView: RecyclerView, newState: Int) {\r\n                super.onScrollStateChanged(recyclerView, newState)\r\n            }\r\n\r\n            override fun onScrolled(recyclerView: RecyclerView, dx: Int, dy: Int) {\r\n                super.onScrolled(recyclerView, dx, dy)\r\n                if (mPage == 0 || mHasNext) {\r\n                    val total: Int = linearLayoutManager.itemCount\r\n                    val lastVisibleItemCount: Int = linearLayoutManager.findLastVisibleItemPosition()\r\n                    GthrLogger.i(\"sdnvksdnf\", \"onScrolled: total $total lastVisibleItemCount $lastVisibleItemCount \")\r\n                    if (!mIsLoading) {\r\n                        if (total > 0)\r\n                            if ((total-1) == lastVisibleItemCount) {\r\n//                                mIsLoading = true\r\n//                                when {\r\n//                                    mAll.mIsActive -> getFeed(mPage,null,GthrCollect.prefs?.collectionInfoModel?.userRefKey?:null)\r\n//                                    mCards.mIsActive -> getFeed(mPage,ProductCategory.CARDS,GthrCollect.prefs?.collectionInfoModel?.userRefKey?:null)\r\n//                                    mSealed.mIsActive -> getFeed(mPage,ProductCategory.SEALED,GthrCollect.prefs?.collectionInfoModel?.userRefKey?:null)\r\n//                                    mFunko.mIsActive -> getFeed(mPage,ProductCategory.TOYS,GthrCollect.prefs?.collectionInfoModel?.userRefKey?:null)\r\n//                                }\r\n                            }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    private fun initViews() {\r\n        mViewBinding.run {\r\n            mAll = cctAll\r\n            mCards = cctCards\r\n            mSealed = cctSealed\r\n            mFunko = cctFunko\r\n            mRvMain = rvMain\r\n            mCctvList = listOf(mAll, mCards, mSealed, mFunko)\r\n            initProgressBar(mViewBinding.layoutProgress)\r\n        }\r\n    }\r\n\r\n    private fun setUpClickListeners() {\r\n        mCctvList.forEach { view ->\r\n            view.setOnClickListener {\r\n                view.selectView()\r\n            }\r\n        }\r\n    }\r\n\r\n    //Method to select Single Collection Filter\r\n    private fun CustomCollectionTypeView.selectView() {\r\n        if (this.mIsActive) return\r\n\r\n        mainJob?.cancel()\r\n        mainJob = MainScope().launch {\r\n            mCctvList.forEach {\r\n                it.setActive(it == this@selectView)\r\n            }\r\n            when{\r\n                mAll.mIsActive-> getFeed(0,null,GthrCollect.prefs?.collectionInfoModel?.userRefKey?:null,true)\r\n                mCards.mIsActive-> getFeed(0,ProductCategory.CARDS,GthrCollect.prefs?.collectionInfoModel?.userRefKey?:null,true)\r\n                mSealed.mIsActive-> getFeed(0,ProductCategory.SEALED,GthrCollect.prefs?.collectionInfoModel?.userRefKey?:null,true)\r\n                mFunko.mIsActive-> getFeed(0,ProductCategory.TOYS,GthrCollect.prefs?.collectionInfoModel?.userRefKey?:null,true)\r\n            }\r\n        }\r\n    }\r\n\r\n    private fun resetFeed() {\r\n        mPage = 0\r\n        mHasNext = true\r\n        mViewModel.clearFeedDisplayList()\r\n    }\r\n\r\n    override fun onDestroy() {\r\n        super.onDestroy()\r\n        mainJob?.cancel()\r\n    }\r\n\r\n    companion object {\r\n        private const val REQUEST_CODE_ID_VERIFICATION_BUY = 69\r\n        private const val REQUEST_CODE_ID_VERIFICATION_SELL = 420\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/gthr/gthrcollect/ui/homebottomnav/feed/FeedFragment.kt b/app/src/main/java/com/gthr/gthrcollect/ui/homebottomnav/feed/FeedFragment.kt
--- a/app/src/main/java/com/gthr/gthrcollect/ui/homebottomnav/feed/FeedFragment.kt	(revision d55e31e7fe7256fcb31400a634daf560d9d85913)
+++ b/app/src/main/java/com/gthr/gthrcollect/ui/homebottomnav/feed/FeedFragment.kt	(date 1633096247871)
@@ -56,7 +56,7 @@
     private var mProductCategory: ProductCategory? = null
     private var mCreatorUID: String? = null
 
-    private var mLimit : Int = 60
+    private var mLimit : Int = 30
     private var mPage: Int = 0
 
     //Paging
@@ -192,13 +192,13 @@
                     if (!mIsLoading) {
                         if (total > 0)
                             if ((total-1) == lastVisibleItemCount) {
-//                                mIsLoading = true
-//                                when {
-//                                    mAll.mIsActive -> getFeed(mPage,null,GthrCollect.prefs?.collectionInfoModel?.userRefKey?:null)
-//                                    mCards.mIsActive -> getFeed(mPage,ProductCategory.CARDS,GthrCollect.prefs?.collectionInfoModel?.userRefKey?:null)
-//                                    mSealed.mIsActive -> getFeed(mPage,ProductCategory.SEALED,GthrCollect.prefs?.collectionInfoModel?.userRefKey?:null)
-//                                    mFunko.mIsActive -> getFeed(mPage,ProductCategory.TOYS,GthrCollect.prefs?.collectionInfoModel?.userRefKey?:null)
-//                                }
+                                mIsLoading = true
+                                when {
+                                    mAll.mIsActive -> getFeed(mPage,null,GthrCollect.prefs?.collectionInfoModel?.userRefKey?:null)
+                                    mCards.mIsActive -> getFeed(mPage,ProductCategory.CARDS,GthrCollect.prefs?.collectionInfoModel?.userRefKey?:null)
+                                    mSealed.mIsActive -> getFeed(mPage,ProductCategory.SEALED,GthrCollect.prefs?.collectionInfoModel?.userRefKey?:null)
+                                    mFunko.mIsActive -> getFeed(mPage,ProductCategory.TOYS,GthrCollect.prefs?.collectionInfoModel?.userRefKey?:null)
+                                }
                             }
                     }
                 }
